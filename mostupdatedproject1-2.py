# -*- coding: utf-8 -*-
"""MostUpdatedProject1

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DGjT_7hMsJvwPUV0gifYy8rz_f7ypkSU
"""

import requests
from bs4 import BeautifulSoup
import pandas as pd

URL5 = 'https://www.brooklyncollegeathletics.com/sports/mens-swimming-and-diving/roster' 
URL6 = 'https://www.brooklyncollegeathletics.com/sports/mens-swimming-and-diving/roster' 
URL7 = 'https://www.brooklyncollegeathletics.com/sports/mens-swimming-and-diving/roster' 

page5 = requests.get(URL5, verify=False)
page6 = requests.get(URL6, verify=False)
page7 = requests.get(URL7, verify=False)

soup5 = BeautifulSoup(page5.content, 'html.parser')
soup6 = BeautifulSoup(page6.content, 'html.parser')
soup7 = BeautifulSoup(page7.content,"html.parser")

bkmensswimteamlist5 = soup5.find_all('span', class_="sidearm-roster-player-height")
bkmensswimteamlist6 = soup6.find_all('span', class_="sidearm-roster-player-first-name")
bkmensswimteamlist7 = soup7.find_all('span', class_="sidearm-roster-player-last-name")

mylist=[]
for x in bkmensswimteamlist5:
  height = x.get_text()
  mylist.append(height)
  lst = mylist
  new_list = [s.replace("\"", "") for s in lst]
  lst0 = new_list

A = 12
B = len(lst0)
for i in range(0, B - A ):
    lst0.pop()

heights_in_inches1 = []

for i in range(0, len(lst0)): 
  x = lst0[i].split("'")
  feet = int(x[0])
  feet_as_inches = feet * 12
  inches = int(x[1])
  total_height_in_inches =  feet_as_inches + inches
  heights_in_inches1.append(total_height_in_inches)
  heights_in_inches1

mylist1=[]
for y in bkmensswimteamlist6:
  height = y.get_text()
  mylist1.append(height)
  lst1 = mylist1

C = 12
D = len(lst1)
for i in range(0, D - C ):
    lst1.pop()

mylist2=[]
for y in bkmensswimteamlist7:
  height = y.get_text()
  mylist2.append(height)
  lst2 = mylist2

E = 12
F = len(lst2)
for i in range(0, F - E ):
    lst2.pop()
percentile_list1 = pd.DataFrame(
    {'First Name': lst1,
     'Last Name': lst2,
     'Height (in inches)': heights_in_inches1
    }, index = [1,2,3,4,5,6,7,8,9,10,11,12]
)

percentile_list1

URL5 = 'https://athletics.baruch.cuny.edu/sports/mens-swimming-and-diving/roster' 
URL6 = 'https://athletics.baruch.cuny.edu/sports/mens-swimming-and-diving/roster' 
URL7 = 'https://athletics.baruch.cuny.edu/sports/mens-swimming-and-diving/roster' 

page5 = requests.get(URL5, verify=False)
page6 = requests.get(URL6, verify=False)
page7 = requests.get(URL7, verify=False)

soup5 = BeautifulSoup(page5.content, 'html.parser')
soup6 = BeautifulSoup(page6.content, 'html.parser')
soup7 = BeautifulSoup(page7.content,"html.parser")

bkmensswimteamlist5 = soup5.find_all('span', class_="sidearm-roster-player-height")
bkmensswimteamlist6 = soup6.find_all('span', class_="sidearm-roster-player-first-name")
bkmensswimteamlist7 = soup7.find_all('span', class_="sidearm-roster-player-last-name")

mylist=[]
for x in bkmensswimteamlist5:
  height = x.get_text()
  mylist.append(height)
  lst = mylist
  new_list = [s.replace("\"", "") for s in lst]
  lst0 = new_list
 
A = 15
B = len(lst0)
for i in range(0, B - A ):
    lst0.pop()

heights_in_inches1 = []

for i in range(0, len(lst0)): 
  x = lst0[i].split("'")
  feet = int(x[0])
  feet_as_inches = feet * 12
  inches = int(x[1])
  total_height_in_inches =  feet_as_inches + inches
  heights_in_inches1.append(total_height_in_inches)
  heights_in_inches1

mylist1=[]
for y in bkmensswimteamlist6:
  height = y.get_text()
  mylist1.append(height)
  lst1 = mylist1

C = 15
D = len(lst1)
for i in range(0, D - C ):
    lst1.pop()

mylist2=[]
for y in bkmensswimteamlist7:
  height = y.get_text()
  mylist2.append(height)
  lst2 = mylist2

E = 15
F = len(lst2)
for i in range(0, F - E ):
    lst2.pop()

percentile_list2 = pd.DataFrame(
    {'First Name': lst1,
     'Last Name': lst2,
     'Height (in inches)': heights_in_inches1
    }, index = [13,14,15,16,17,18,19,20,21,22,23,24,25,26,27]

)

percentile_list2

URL5 = 'https://yorkathletics.com/sports/mens-swimming-and-diving/roster' 
URL6 = 'https://yorkathletics.com/sports/mens-swimming-and-diving/roster' 
URL7 = 'https://yorkathletics.com/sports/mens-swimming-and-diving/roster' 

page5 = requests.get(URL5, verify=False)
page6 = requests.get(URL6, verify=False)
page7 = requests.get(URL7, verify=False)

soup5 = BeautifulSoup(page5.content, 'html.parser')
soup6 = BeautifulSoup(page6.content, 'html.parser')
soup7 = BeautifulSoup(page7.content,"html.parser")

bkmensswimteamlist5 = soup5.find_all('span', class_="sidearm-roster-player-height")
bkmensswimteamlist6 = soup6.find_all('span', class_="sidearm-roster-player-first-name")
bkmensswimteamlist7 = soup7.find_all('span', class_="sidearm-roster-player-last-name")
#I'm pretty sure I can use some kind of dictionary here because the problem I'm having here versus homework is simply that I have more things for each web page

mylist=[]
for x in bkmensswimteamlist5:
  height = x.get_text()
  mylist.append(height)
  lst = mylist
  new_list = [s.replace("\"", "") for s in lst]
  lst0 = new_list
  
A = 10
B = len(lst0)
for i in range(0, B - A ):
    lst0.pop()

heights_in_inches1 = []

for i in range(0, len(lst0)): 
  x = lst0[i].split("'")
  feet = int(x[0])
  feet_as_inches = feet * 12
  inches = int(x[1])
  total_height_in_inches =  feet_as_inches + inches
  heights_in_inches1.append(total_height_in_inches)
  heights_in_inches1

mylist1=[]
for y in bkmensswimteamlist6:
  height = y.get_text()
  mylist1.append(height)
  lst1 = mylist1

C = 10
D = len(lst1)
for i in range(0, D - C ):
    lst1.pop()

mylist2=[]
for y in bkmensswimteamlist7:
  height = y.get_text()
  mylist2.append(height)
  lst2 = mylist2

E = 10
F = len(lst2)
for i in range(0, F - E ):
    lst2.pop()

percentile_list3 = pd.DataFrame(
    {'First Name': lst1,
     'Last Name': lst2,
     'Height (in inches)': heights_in_inches1
    },
    index = [28,29,30,31,32,33,34,35,36,37]
)

percentile_list3

frames = [percentile_list1, percentile_list2, percentile_list3]
result10001 = pd.concat(frames)
print(result10001)
print("")
averagedf = result10001['Height (in inches)'].mean()
print("Average height of all college's men's swimmers: ", round(averagedf), " inches")
print("")

#Output is good-to-good for the men's swim team with all the rosters, next women's swim team...
tall111 = result10001.nlargest(5, ['Height (in inches)'])
list111 = pd.DataFrame(tall111)
listings111 = list111.values.tolist()
print('List of five tallest men swimmers : ', listings111)
print('Type of list111: ', type(listings111))
print("")
tall222 = result10001.nsmallest(5, ['Height (in inches)'])
list222 = pd.DataFrame(tall222)
listings222 = list222.values.tolist()
print('List of five shortest men swimmers : ', listings222)
print('Type of list111: ', type(listings222))

import requests
from bs4 import BeautifulSoup
import pandas as pd

URL5 = 'https://www.brooklyncollegeathletics.com/sports/womens-swimming-and-diving/roster' #good
URL6 = 'https://www.brooklyncollegeathletics.com/sports/womens-swimming-and-diving/roster' #good
URL7 = 'https://www.brooklyncollegeathletics.com/sports/womens-swimming-and-diving/roster' #good

page5 = requests.get(URL5, verify=False)
page6 = requests.get(URL6, verify=False)
page7 = requests.get(URL7, verify=False)

soup5 = BeautifulSoup(page5.content, 'html.parser')
soup6 = BeautifulSoup(page6.content, 'html.parser')
soup7 = BeautifulSoup(page7.content,"html.parser")

bkmensswimteamlist5 = soup5.find_all('span', class_="sidearm-roster-player-height")
bkmensswimteamlist6 = soup6.find_all('span', class_="sidearm-roster-player-first-name")
bkmensswimteamlist7 = soup7.find_all('span', class_="sidearm-roster-player-last-name")

mylist=[]
for x in bkmensswimteamlist5:
  height = x.get_text()
  mylist.append(height)
  #print(mylist)
  #height = s.strip('"\"') for s in mylist  # remove the \ from the string 
  #mylst = map(lambda each:each.strip("'\'"), mylist)
  lst = mylist

  #print([s.strip('"') for s in lst]) # remove the \ and " from the string borders
  #LET'S GOOOOOOOO, HERE I GOT THE HEIGHTS OF EACH OF THE TEAMS USING A FUNCTION!!!!!!!!!!!
  new_list = [s.replace("\"", "") for s in lst]
  #LET'S GOOOOOOO AGAIN, I GOT THE HEIGHTS WITHOUT THAT \ TO COME WITH IT TOOO
  #Create a new list from the one below by converting each height to inches

  lst0 = new_list
  #The new list will look like the following: [70, 71, 69, 75...]

  #1 foot = 12 inches

  #Someone whos is 5'10" is 70 inches tall. Why 5 * 12 = 60 inches and if I add 10 inches I get 70
  #good, so up to this point, I have all the heights of the swimmers at JUST Brooklyn College
#the problem here is that the print() is looping the heights to double the amount in the list
# using pop()
# to truncate list 
# size desired
A = 10
B = len(lst0)
for i in range(0, B - A ):
    lst0.pop()

heights_in_inches1 = []

for i in range(0, len(lst0)): #i don't think "height" should be here
  #splitting the raw string on the '
  x = lst0[i].split("'")
  #extracting the feet from the splitted list and converting to int

  feet = int(x[0])
  #converting the feet to inches by mulitplying it by 12

  feet_as_inches = feet * 12
  ##extracting the inches from the splitted list and converting to int

  inches = int(x[1])
  #calculating the total height inches

  total_height_in_inches =  feet_as_inches + inches

  #appending the converted height to a new list
  heights_in_inches1.append(total_height_in_inches)

  #printing the heights in inches (no need to print it really)
  heights_in_inches1

mylist1=[]
for y in bkmensswimteamlist6:
  height = y.get_text()
  mylist1.append(height)
  #print(mylist)
  #height = s.strip('"\"') for s in mylist  # remove the \ from the string 
  #mylst = map(lambda each:each.strip("'\'"), mylist)
  lst1 = mylist1

C = 10
D = len(lst1)
for i in range(0, D - C ):
    lst1.pop()

mylist2=[]
for y in bkmensswimteamlist7:
  height = y.get_text()
  mylist2.append(height)
  #print(mylist)
  #height = s.strip('"\"') for s in mylist  # remove the \ from the string 
  #mylst = map(lambda each:each.strip("'\'"), mylist)
  lst2 = mylist2

E = 10
F = len(lst2)
for i in range(0, F - E ):
    lst2.pop()
#up to this point we have the heights, first name, and last name of the players
'''
lst0 = range(100)
lst1 = range(100)
lst2 = range(100)

percentile_list = pd.DataFrame(
    {'First Name': lst1,
     'Last Name': lst2,
     'Height': lst0
    })

percentile_list
'''


'''
lst0[i] = null;
#true
bool elementIsNull = lst0[i] == null;
lst0.RemoveRange(11,11);
print(lst0)
'''
percentile_list1 = pd.DataFrame(
    {'First Name': lst1,
     'Last Name': lst2,
     'Height (in inches)': heights_in_inches1
    }, index = [1,2,3,4,5,6,7,8,9,10]
)

percentile_list1
#LET'S GOOOOOOO, I CREATED A DATAFRAME WITH THE NAMES AND HEIGHTS OF THE PLAYERS IN THE BK MEN'S SWIMMING AND DIVING ROSTER
#LET'S GOOOOO, I CREATED A DATAFRMAE WITH THE FIRST NAME, LAST NAME, AND NOW THE HEIGHT IN INCHES OF THE BK MEN'S SWIM AND DIVE TEAM

import requests
from bs4 import BeautifulSoup
import pandas as pd

URL5 = 'https://athletics.baruch.cuny.edu/sports/womens-swimming-and-diving/roster' #good
URL6 = 'https://athletics.baruch.cuny.edu/sports/womens-swimming-and-diving/roster' #good
URL7 = 'https://athletics.baruch.cuny.edu/sports/womens-swimming-and-diving/roster' #good

page5 = requests.get(URL5, verify=False)
page6 = requests.get(URL6, verify=False)
page7 = requests.get(URL7, verify=False)

soup5 = BeautifulSoup(page5.content, 'html.parser')
soup6 = BeautifulSoup(page6.content, 'html.parser')
soup7 = BeautifulSoup(page7.content,"html.parser")

bkmensswimteamlist5 = soup5.find_all('span', class_="sidearm-roster-player-height")
bkmensswimteamlist6 = soup6.find_all('span', class_="sidearm-roster-player-first-name")
bkmensswimteamlist7 = soup7.find_all('span', class_="sidearm-roster-player-last-name")

mylist=[]
for x in bkmensswimteamlist5:
  height = x.get_text()
  mylist.append(height)
  #print(mylist)
  #height = s.strip('"\"') for s in mylist  # remove the \ from the string 
  #mylst = map(lambda each:each.strip("'\'"), mylist)
  lst = mylist

  #print([s.strip('"') for s in lst]) # remove the \ and " from the string borders
  #LET'S GOOOOOOOO, HERE I GOT THE HEIGHTS OF EACH OF THE TEAMS USING A FUNCTION!!!!!!!!!!!
  new_list = [s.replace("\"", "") for s in lst]
  #LET'S GOOOOOOO AGAIN, I GOT THE HEIGHTS WITHOUT THAT \ TO COME WITH IT TOOO
  #Create a new list from the one below by converting each height to inches

  lst0 = new_list
  #The new list will look like the following: [70, 71, 69, 75...]

  #1 foot = 12 inches

  #Someone whos is 5'10" is 70 inches tall. Why 5 * 12 = 60 inches and if I add 10 inches I get 70
  #good, so up to this point, I have all the heights of the swimmers at JUST Brooklyn College
#the problem here is that the print() is looping the heights to double the amount in the list
# using pop()
# to truncate list 
# size desired
A = 11
B = len(lst0)
for i in range(0, B - A ):
    lst0.pop()

heights_in_inches1 = []

for i in range(0, len(lst0)): #i don't think "height" should be here
  #splitting the raw string on the '
  x = lst0[i].split("'")
  #extracting the feet from the splitted list and converting to int

  feet = int(x[0])
  #converting the feet to inches by mulitplying it by 12

  feet_as_inches = feet * 12
  ##extracting the inches from the splitted list and converting to int

  inches = int(x[1])
  #calculating the total height inches

  total_height_in_inches =  feet_as_inches + inches

  #appending the converted height to a new list
  heights_in_inches1.append(total_height_in_inches)

  #printing the heights in inches (no need to print it really)
  heights_in_inches1

mylist1=[]
for y in bkmensswimteamlist6:
  height = y.get_text()
  mylist1.append(height)
  #print(mylist)
  #height = s.strip('"\"') for s in mylist  # remove the \ from the string 
  #mylst = map(lambda each:each.strip("'\'"), mylist)
  lst1 = mylist1

C = 11
D = len(lst1)
for i in range(0, D - C ):
    lst1.pop()

mylist2=[]
for y in bkmensswimteamlist7:
  height = y.get_text()
  mylist2.append(height)
  #print(mylist)
  #height = s.strip('"\"') for s in mylist  # remove the \ from the string 
  #mylst = map(lambda each:each.strip("'\'"), mylist)
  lst2 = mylist2

E = 11
F = len(lst2)
for i in range(0, F - E ):
    lst2.pop()
#up to this point we have the heights, first name, and last name of the players
'''
lst0 = range(100)
lst1 = range(100)
lst2 = range(100)

percentile_list = pd.DataFrame(
    {'First Name': lst1,
     'Last Name': lst2,
     'Height': lst0
    })

percentile_list
'''


'''
lst0[i] = null;
#true
bool elementIsNull = lst0[i] == null;
lst0.RemoveRange(11,11);
print(lst0)
'''
percentile_list2 = pd.DataFrame(
    {'First Name': lst1,
     'Last Name': lst2,
     'Height (in inches)': heights_in_inches1
    }, index = [11,12,13,14,15,16,17,18,19,20,21]            
)

percentile_list2
#LET'S GOOOOOOO, I CREATED A DATAFRAME WITH THE NAMES AND HEIGHTS OF THE PLAYERS IN THE BK MEN'S SWIMMING AND DIVING ROSTER
#LET'S GOOOOO, I CREATED A DATAFRMAE WITH THE FIRST NAME, LAST NAME, AND NOW THE HEIGHT IN INCHES OF THE BK MEN'S SWIM AND DIVE TEAM


URL5 = 'https://queensknights.com/sports/womens-swimming-and-diving/roster/2019-20' #good
URL6 = 'https://queensknights.com/sports/womens-swimming-and-diving/roster/2019-20' #good
URL7 = 'https://queensknights.com/sports/womens-swimming-and-diving/roster/2019-20' #good

page5 = requests.get(URL5, verify=False)
page6 = requests.get(URL6, verify=False)
page7 = requests.get(URL7, verify=False)

soup5 = BeautifulSoup(page5.content, 'html.parser')
soup6 = BeautifulSoup(page6.content, 'html.parser')
soup7 = BeautifulSoup(page7.content,"html.parser")

bkmensswimteamlist5 = soup5.find_all('span', class_="sidearm-roster-player-height")
bkmensswimteamlist6 = soup6.find_all('span', class_="sidearm-roster-player-first-name")
bkmensswimteamlist7 = soup7.find_all('span', class_="sidearm-roster-player-last-name")

mylist=[]
for x in bkmensswimteamlist5:
  height = x.get_text()
  mylist.append(height)
  #print(mylist)
  #height = s.strip('"\"') for s in mylist  # remove the \ from the string 
  #mylst = map(lambda each:each.strip("'\'"), mylist)
  lst = mylist

  #print([s.strip('"') for s in lst]) # remove the \ and " from the string borders
  #LET'S GOOOOOOOO, HERE I GOT THE HEIGHTS OF EACH OF THE TEAMS USING A FUNCTION!!!!!!!!!!!
  new_list = [s.replace("\"", "") for s in lst]
  #LET'S GOOOOOOO AGAIN, I GOT THE HEIGHTS WITHOUT THAT \ TO COME WITH IT TOOO
  #Create a new list from the one below by converting each height to inches

  lst0 = new_list
  #The new list will look like the following: [70, 71, 69, 75...]

  #1 foot = 12 inches

  #Someone whos is 5'10" is 70 inches tall. Why 5 * 12 = 60 inches and if I add 10 inches I get 70
  #good, so up to this point, I have all the heights of the swimmers at JUST Brooklyn College
#the problem here is that the print() is looping the heights to double the amount in the list

# using pop()
# to truncate list 
# size desired
A = 13
B = len(lst0)
for i in range(0, B - A ):
    lst0.pop()

heights_in_inches1 = []

for i in range(0, len(lst0)): #i don't think "height" should be here
  #splitting the raw string on the '
  x = lst0[i].split("'")
  #extracting the feet from the splitted list and converting to int

  feet = int(x[0])
  #converting the feet to inches by mulitplying it by 12

  feet_as_inches = feet * 12
  ##extracting the inches from the splitted list and converting to int

  inches = int(x[1])
  #calculating the total height inches

  total_height_in_inches =  feet_as_inches + inches

  #appending the converted height to a new list
  heights_in_inches1.append(total_height_in_inches)

  #printing the heights in inches (no need to print it really)
  heights_in_inches1

mylist1=[]
for y in bkmensswimteamlist6:
  height = y.get_text()
  mylist1.append(height)
  #print(mylist)
  #height = s.strip('"\"') for s in mylist  # remove the \ from the string 
  #mylst = map(lambda each:each.strip("'\'"), mylist)
  lst1 = mylist1

C = 13
D = len(lst1)
for i in range(0, D - C ):
    lst1.pop()

mylist2=[]
for y in bkmensswimteamlist7:
  height = y.get_text()
  mylist2.append(height)
  #print(mylist)
  #height = s.strip('"\"') for s in mylist  # remove the \ from the string 
  #mylst = map(lambda each:each.strip("'\'"), mylist)
  lst2 = mylist2

E = 13
F = len(lst2)
for i in range(0, F - E ):
    lst2.pop()
#up to this point we have the heights, first name, and last name of the players
'''
lst0 = range(100)
lst1 = range(100)
lst2 = range(100)

percentile_list = pd.DataFrame(
    {'First Name': lst1,
     'Last Name': lst2,
     'Height': lst0
    })

percentile_list
'''


'''
lst0[i] = null;
#true
bool elementIsNull = lst0[i] == null;
lst0.RemoveRange(11,11);
print(lst0)
'''
percentile_list3 = pd.DataFrame(
    {'First Name': lst1,
     'Last Name': lst2,
     'Height (in inches)': heights_in_inches1
    },
    index = [22,23,24,25,26,27,28,29,30,31,32,33,34]
)

percentile_list3
#print(percentile_list3)

frames = [percentile_list1, percentile_list2, percentile_list3]
result10001 = pd.concat(frames)
#frames.loc[22,'Height (in inches)'] = 0
print(result10001)
print("")
averagedf = result10001['Height (in inches)'].mean()
#that was the problem, the people with no height are not showing 0 in the dataframe then in the end, the heights get repeated
#using the 2019 roster because the professor said it was okay to do so. 
print("Average height of all college's women's swimmers: ", round(averagedf), " inches")
result10001.loc[21,'Height (in inches)'] = 0
print("")

#all good to go now
tall111 = result10001.nlargest(5, ['Height (in inches)'])
list111 = pd.DataFrame(tall111)
listings111 = list111.values.tolist()
print('List of five tallest women swimmers : ', listings111)
print('Type of list111: ', type(listings111))
print("")
tall222 = result10001.nsmallest(5, ['Height (in inches)'])
list222 = pd.DataFrame(tall222)
listings222 = list222.values.tolist()
print('List of five shortest women swimmers : ', listings222)
print('Type of list111: ', type(listings222))
'''
def average(heightlist100):
  mylist = []
  for x in heightlist100:
    height  = x.get_text()
    mylist.append(height)
''' 

#So, up to this last print we are are good because the 37 swimmers across the colleges are put into one dataframe :)
#Big thing to note: Always save work and text myself about what my ideas or thoughts were leading towards iA
#LET'S GOOOOOOO, I CREATED A DATAFRAME WITH THE NAMES AND HEIGHTS OF THE PLAYERS IN THE BK MEN'S SWIMMING AND DIVING ROSTER
#LET'S GOOOOO, I CREATED A DATAFRMAE WITH THE FIRST NAME, LAST NAME, AND NOW THE HEIGHT IN INCHES OF THE BK MEN'S SWIM AND DIVE TEAM
#LET'S GOOOOO, I GOT THREE OF THE SIMILAR DATAFRAME FOR THE MEN'S SWIM TEAM FOR THREE DIFFERENT COLLEGES
#LET'S GOOOO, GOT ALL THE 37 PLAYERS ACROSS THE COLLEGES THAT WE WERE LOOKING FOR, NOW MERGE INTO A DATAFRAME
#LET'S GOOOO, GOT ALL TEH PLAYERS FOR THE MENS SWIM TEAM ACROSS COLLEGES INTO ONE DATAFRAME BY INSWZ

#Basically, we know this whole thing works for one sport gender and roster of teams, the thing we have to do now is try to kind of "loop" and reduce
#code so that my code would look cleaner and the process would be easier for all the other questions that relatively the same then I can just write the report

import requests
from bs4 import BeautifulSoup
import pandas as pd

URL5 = 'https://www.brooklyncollegeathletics.com/sports/mens-volleyball/roster/2019' #good
URL6 = 'https://www.brooklyncollegeathletics.com/sports/mens-volleyball/roster/2019' #good
URL7 = 'https://www.brooklyncollegeathletics.com/sports/mens-volleyball/roster/2019' #good

page5 = requests.get(URL5, verify=False)
page6 = requests.get(URL6, verify=False)
page7 = requests.get(URL7, verify=False)

soup5 = BeautifulSoup(page5.content, 'html.parser')
soup6 = BeautifulSoup(page6.content, 'html.parser')
soup7 = BeautifulSoup(page7.content,"html.parser")

bkmensswimteamlist5 = soup5.find_all('span', class_="sidearm-roster-player-height")
bkmensswimteamlist6 = soup6.find_all('span', class_="sidearm-roster-player-first-name")
bkmensswimteamlist7 = soup7.find_all('span', class_="sidearm-roster-player-last-name")

mylist=[]
for x in bkmensswimteamlist5:
  height = x.get_text()
  mylist.append(height)
  #print(mylist)
  #height = s.strip('"\"') for s in mylist  # remove the \ from the string 
  #mylst = map(lambda each:each.strip("'\'"), mylist)
  lst = mylist

  #print([s.strip('"') for s in lst]) # remove the \ and " from the string borders
  #LET'S GOOOOOOOO, HERE I GOT THE HEIGHTS OF EACH OF THE TEAMS USING A FUNCTION!!!!!!!!!!!
  new_list = [s.replace("\"", "") for s in lst]
  #LET'S GOOOOOOO AGAIN, I GOT THE HEIGHTS WITHOUT THAT \ TO COME WITH IT TOOO
  #Create a new list from the one below by converting each height to inches

  lst0 = new_list
  #The new list will look like the following: [70, 71, 69, 75...]

  #1 foot = 12 inches

  #Someone whos is 5'10" is 70 inches tall. Why 5 * 12 = 60 inches and if I add 10 inches I get 70
  #good, so up to this point, I have all the heights of the swimmers at JUST Brooklyn College
#the problem here is that the print() is looping the heights to double the amount in the list
# using pop()
# to truncate list 
# size desired
A = 9
B = len(lst0)
for i in range(0, B - A ):
    lst0.pop()

heights_in_inches1 = []

for i in range(0, len(lst0)): #i don't think "height" should be here
  #splitting the raw string on the '
  x = lst0[i].split("'")
  #extracting the feet from the splitted list and converting to int

  feet = int(x[0])
  #converting the feet to inches by mulitplying it by 12

  feet_as_inches = feet * 12
  ##extracting the inches from the splitted list and converting to int

  inches = int(x[1])
  #calculating the total height inches

  total_height_in_inches =  feet_as_inches + inches

  #appending the converted height to a new list
  heights_in_inches1.append(total_height_in_inches)

  #printing the heights in inches (no need to print it really)
  heights_in_inches1

mylist1=[]
for y in bkmensswimteamlist6:
  height = y.get_text()
  mylist1.append(height)
  #print(mylist)
  #height = s.strip('"\"') for s in mylist  # remove the \ from the string 
  #mylst = map(lambda each:each.strip("'\'"), mylist)
  lst1 = mylist1

C = 9
D = len(lst1)
for i in range(0, D - C ):
    lst1.pop()

mylist2=[]
for y in bkmensswimteamlist7:
  height = y.get_text()
  mylist2.append(height)
  #print(mylist)
  #height = s.strip('"\"') for s in mylist  # remove the \ from the string 
  #mylst = map(lambda each:each.strip("'\'"), mylist)
  lst2 = mylist2

E = 9
F = len(lst2)
for i in range(0, F - E ):
    lst2.pop()
#up to this point we have the heights, first name, and last name of the players
'''
lst0 = range(100)
lst1 = range(100)
lst2 = range(100)

percentile_list = pd.DataFrame(
    {'First Name': lst1,
     'Last Name': lst2,
     'Height': lst0
    })

percentile_list
'''


'''
lst0[i] = null;
#true
bool elementIsNull = lst0[i] == null;
lst0.RemoveRange(11,11);
print(lst0)
'''
percentile_list1 = pd.DataFrame(
    {'First Name': lst1,
     'Last Name': lst2,
     'Height (in inches)': heights_in_inches1
    }, index = [1,2,3,4,5,6,7,8,9]
)

percentile_list1
#LET'S GOOOOOOO, I CREATED A DATAFRAME WITH THE NAMES AND HEIGHTS OF THE PLAYERS IN THE BK MEN'S SWIMMING AND DIVING ROSTER
#LET'S GOOOOO, I CREATED A DATAFRMAE WITH THE FIRST NAME, LAST NAME, AND NOW THE HEIGHT IN INCHES OF THE BK MEN'S SWIM AND DIVE TEAM

import requests
from bs4 import BeautifulSoup
import pandas as pd

URL5 = 'https://athletics.baruch.cuny.edu/sports/mens-volleyball/roster' #good
URL6 = 'https://athletics.baruch.cuny.edu/sports/mens-volleyball/roster' #good
URL7 = 'https://athletics.baruch.cuny.edu/sports/mens-volleyball/roster' #good

page5 = requests.get(URL5, verify=False)
page6 = requests.get(URL6, verify=False)
page7 = requests.get(URL7, verify=False)

soup5 = BeautifulSoup(page5.content, 'html.parser')
soup6 = BeautifulSoup(page6.content, 'html.parser')
soup7 = BeautifulSoup(page7.content,"html.parser")

bkmensswimteamlist5 = soup5.find_all('span', class_="sidearm-roster-player-height")
bkmensswimteamlist6 = soup6.find_all('span', class_="sidearm-roster-player-first-name")
bkmensswimteamlist7 = soup7.find_all('span', class_="sidearm-roster-player-last-name")

mylist=[]
for x in bkmensswimteamlist5:
  height = x.get_text()
  mylist.append(height)
  #print(mylist)
  #height = s.strip('"\"') for s in mylist  # remove the \ from the string 
  #mylst = map(lambda each:each.strip("'\'"), mylist)
  lst = mylist

  #print([s.strip('"') for s in lst]) # remove the \ and " from the string borders
  #LET'S GOOOOOOOO, HERE I GOT THE HEIGHTS OF EACH OF THE TEAMS USING A FUNCTION!!!!!!!!!!!
  new_list = [s.replace("\"", "") for s in lst]
  #LET'S GOOOOOOO AGAIN, I GOT THE HEIGHTS WITHOUT THAT \ TO COME WITH IT TOOO
  #Create a new list from the one below by converting each height to inches

  lst0 = new_list
  #The new list will look like the following: [70, 71, 69, 75...]

  #1 foot = 12 inches

  #Someone whos is 5'10" is 70 inches tall. Why 5 * 12 = 60 inches and if I add 10 inches I get 70
  #good, so up to this point, I have all the heights of the swimmers at JUST Brooklyn College
#the problem here is that the print() is looping the heights to double the amount in the list
# using pop()
# to truncate list 
# size desired
A = 17
B = len(lst0)
for i in range(0, B - A ):
    lst0.pop()

heights_in_inches1 = []

for i in range(0, len(lst0)): #i don't think "height" should be here
  #splitting the raw string on the '
  x = lst0[i].split("'")
  #extracting the feet from the splitted list and converting to int

  feet = int(x[0])
  #converting the feet to inches by mulitplying it by 12

  feet_as_inches = feet * 12
  ##extracting the inches from the splitted list and converting to int

  inches = int(x[1])
  #calculating the total height inches

  total_height_in_inches =  feet_as_inches + inches

  #appending the converted height to a new list
  heights_in_inches1.append(total_height_in_inches)

  #printing the heights in inches (no need to print it really)
  heights_in_inches1

mylist1=[]
for y in bkmensswimteamlist6:
  height = y.get_text()
  mylist1.append(height)
  #print(mylist)
  #height = s.strip('"\"') for s in mylist  # remove the \ from the string 
  #mylst = map(lambda each:each.strip("'\'"), mylist)
  lst1 = mylist1

C = 17
D = len(lst1)
for i in range(0, D - C ):
    lst1.pop()

mylist2=[]
for y in bkmensswimteamlist7:
  height = y.get_text()
  mylist2.append(height)
  #print(mylist)
  #height = s.strip('"\"') for s in mylist  # remove the \ from the string 
  #mylst = map(lambda each:each.strip("'\'"), mylist)
  lst2 = mylist2

E = 17
F = len(lst2)
for i in range(0, F - E ):
    lst2.pop()
#up to this point we have the heights, first name, and last name of the players
'''
lst0 = range(100)
lst1 = range(100)
lst2 = range(100)

percentile_list = pd.DataFrame(
    {'First Name': lst1,
     'Last Name': lst2,
     'Height': lst0
    })

percentile_list
'''


'''
lst0[i] = null;
#true
bool elementIsNull = lst0[i] == null;
lst0.RemoveRange(11,11);
print(lst0)
'''
percentile_list2 = pd.DataFrame(
    {'First Name': lst1,
     'Last Name': lst2,
     'Height (in inches)': heights_in_inches1
    }, index = [10,11,12,13,14,15,16,17,18,19,20,21,21,22,23,24,25] 
)

percentile_list2
#LET'S GOOOOOOO, I CREATED A DATAFRAME WITH THE NAMES AND HEIGHTS OF THE PLAYERS IN THE BK MEN'S SWIMMING AND DIVING ROSTER
#LET'S GOOOOO, I CREATED A DATAFRMAE WITH THE FIRST NAME, LAST NAME, AND NOW THE HEIGHT IN INCHES OF THE BK MEN'S SWIM AND DIVE TEAM


URL5 = 'https://yorkathletics.com/sports/mens-volleyball/roster' #good
URL6 = 'https://yorkathletics.com/sports/mens-volleyball/roster' #good
URL7 = 'https://yorkathletics.com/sports/mens-volleyball/roster' #good

page5 = requests.get(URL5, verify=False)
page6 = requests.get(URL6, verify=False)
page7 = requests.get(URL7, verify=False)

soup5 = BeautifulSoup(page5.content, 'html.parser')
soup6 = BeautifulSoup(page6.content, 'html.parser')
soup7 = BeautifulSoup(page7.content,"html.parser")

bkmensswimteamlist5 = soup5.find_all('span', class_="sidearm-roster-player-height")
bkmensswimteamlist6 = soup6.find_all('span', class_="sidearm-roster-player-first-name")
bkmensswimteamlist7 = soup7.find_all('span', class_="sidearm-roster-player-last-name")

mylist=[]
for x in bkmensswimteamlist5:
  height = x.get_text()
  mylist.append(height)
  #print(mylist)
  #height = s.strip('"\"') for s in mylist  # remove the \ from the string 
  #mylst = map(lambda each:each.strip("'\'"), mylist)
  lst = mylist

  #print([s.strip('"') for s in lst]) # remove the \ and " from the string borders
  #LET'S GOOOOOOOO, HERE I GOT THE HEIGHTS OF EACH OF THE TEAMS USING A FUNCTION!!!!!!!!!!!
  new_list = [s.replace("\"", "") for s in lst]
  #LET'S GOOOOOOO AGAIN, I GOT THE HEIGHTS WITHOUT THAT \ TO COME WITH IT TOOO
  #Create a new list from the one below by converting each height to inches

  lst0 = new_list
  #The new list will look like the following: [70, 71, 69, 75...]

  #1 foot = 12 inches

  #Someone whos is 5'10" is 70 inches tall. Why 5 * 12 = 60 inches and if I add 10 inches I get 70
  #good, so up to this point, I have all the heights of the swimmers at JUST Brooklyn College
#the problem here is that the print() is looping the heights to double the amount in the list

# using pop()
# to truncate list 
# size desired
A = 14
B = len(lst0)
for i in range(0, B - A ):
    lst0.pop()

heights_in_inches1 = []

for i in range(0, len(lst0)): #i don't think "height" should be here
  #splitting the raw string on the '
  x = lst0[i].split("'")
  #extracting the feet from the splitted list and converting to int

  feet = int(x[0])
  #converting the feet to inches by mulitplying it by 12

  feet_as_inches = feet * 12
  ##extracting the inches from the splitted list and converting to int

  inches = int(x[1])
  #calculating the total height inches

  total_height_in_inches =  feet_as_inches + inches

  #appending the converted height to a new list
  heights_in_inches1.append(total_height_in_inches)

  #printing the heights in inches (no need to print it really)
  heights_in_inches1

mylist1=[]
for y in bkmensswimteamlist6:
  height = y.get_text()
  mylist1.append(height)
  #print(mylist)
  #height = s.strip('"\"') for s in mylist  # remove the \ from the string 
  #mylst = map(lambda each:each.strip("'\'"), mylist)
  lst1 = mylist1

C = 14
D = len(lst1)
for i in range(0, D - C ):
    lst1.pop()

mylist2=[]
for y in bkmensswimteamlist7:
  height = y.get_text()
  mylist2.append(height)
  #print(mylist)
  #height = s.strip('"\"') for s in mylist  # remove the \ from the string 
  #mylst = map(lambda each:each.strip("'\'"), mylist)
  lst2 = mylist2

E = 14
F = len(lst2)
for i in range(0, F - E ):
    lst2.pop()
#up to this point we have the heights, first name, and last name of the players
'''
lst0 = range(100)
lst1 = range(100)
lst2 = range(100)

percentile_list = pd.DataFrame(
    {'First Name': lst1,
     'Last Name': lst2,
     'Height': lst0
    })

percentile_list
'''


'''
lst0[i] = null;
#true
bool elementIsNull = lst0[i] == null;
lst0.RemoveRange(11,11);
print(lst0)
'''
percentile_list3 = pd.DataFrame(
    {'First Name': lst1,
     'Last Name': lst2,
     'Height (in inches)': heights_in_inches1
    },
    index = [26,27,28,29,30,31,32,33,34,35,36,37,38,39]
            
)

percentile_list3
#print(percentile_list3)

frames = [percentile_list1, percentile_list2, percentile_list3]
result10001 = pd.concat(frames)
print(result10001)
print("")
averagedf = result10001['Height (in inches)'].mean()
#that was the problem, the people with no height are not showing 0 in the dataframe then in the end, the heights get repeated
print("Average height of all college's women's swimmers: ", round(averagedf), " inches")
print("")
#GOOD to go, no external problems here or player's with missing heights
#have to fix since not saved
#good to go now
tall111 = result10001.nlargest(5, ['Height (in inches)'])
list111 = pd.DataFrame(tall111)
listings111 = list111.values.tolist()
print('List of five tallest men volleyball players : ', listings111)
print('Type of list111: ', type(listings111))
print("")
tall222 = result10001.nsmallest(5, ['Height (in inches)'])
list222 = pd.DataFrame(tall222)
listings222 = list222.values.tolist()
print('List of five shortest men volleyball players : ', listings222)
print('Type of list111: ', type(listings222))
'''
def average(heightlist100):
  mylist = []
  for x in heightlist100:
    height  = x.get_text()
    mylist.append(height)
''' 

#So, up to this last print we are are good because the 37 swimmers across the colleges are put into one dataframe :)
#Big thing to note: Always save work and text myself about what my ideas or thoughts were leading towards iA
#LET'S GOOOOOOO, I CREATED A DATAFRAME WITH THE NAMES AND HEIGHTS OF THE PLAYERS IN THE BK MEN'S SWIMMING AND DIVING ROSTER
#LET'S GOOOOO, I CREATED A DATAFRMAE WITH THE FIRST NAME, LAST NAME, AND NOW THE HEIGHT IN INCHES OF THE BK MEN'S SWIM AND DIVE TEAM
#LET'S GOOOOO, I GOT THREE OF THE SIMILAR DATAFRAME FOR THE MEN'S SWIM TEAM FOR THREE DIFFERENT COLLEGES
#LET'S GOOOO, GOT ALL THE 37 PLAYERS ACROSS THE COLLEGES THAT WE WERE LOOKING FOR, NOW MERGE INTO A DATAFRAME
#LET'S GOOOO, GOT ALL TEH PLAYERS FOR THE MENS SWIM TEAM ACROSS COLLEGES INTO ONE DATAFRAME BY INSWZ

#Basically, we know this whole thing works for one sport gender and roster of teams, the thing we have to do now is try to kind of "loop" and reduce
#code so that my code would look cleaner and the process would be easier for all the other questions that relatively the same then I can just write the report


import requests
from bs4 import BeautifulSoup
import pandas as pd

URL5 = 'https://www.brooklyncollegeathletics.com/sports/womens-volleyball/roster/2019' #good
URL6 = 'https://www.brooklyncollegeathletics.com/sports/womens-volleyball/roster/2019' #good
URL7 = 'https://www.brooklyncollegeathletics.com/sports/womens-volleyball/roster/2019' #good

page5 = requests.get(URL5, verify=False)
page6 = requests.get(URL6, verify=False)
page7 = requests.get(URL7, verify=False)

soup5 = BeautifulSoup(page5.content, 'html.parser')
soup6 = BeautifulSoup(page6.content, 'html.parser')
soup7 = BeautifulSoup(page7.content,"html.parser")

bkmensswimteamlist5 = soup5.find_all('span', class_="sidearm-roster-player-height")
bkmensswimteamlist6 = soup6.find_all('span', class_="sidearm-roster-player-first-name")
bkmensswimteamlist7 = soup7.find_all('span', class_="sidearm-roster-player-last-name")

mylist=[]
for x in bkmensswimteamlist5:
  height = x.get_text()
  mylist.append(height)
  #print(mylist)
  #height = s.strip('"\"') for s in mylist  # remove the \ from the string 
  #mylst = map(lambda each:each.strip("'\'"), mylist)
  lst = mylist

  #print([s.strip('"') for s in lst]) # remove the \ and " from the string borders
  #LET'S GOOOOOOOO, HERE I GOT THE HEIGHTS OF EACH OF THE TEAMS USING A FUNCTION!!!!!!!!!!!
  new_list = [s.replace("\"", "") for s in lst]
  #LET'S GOOOOOOO AGAIN, I GOT THE HEIGHTS WITHOUT THAT \ TO COME WITH IT TOOO
  #Create a new list from the one below by converting each height to inches

  lst0 = new_list
  #The new list will look like the following: [70, 71, 69, 75...]

  #1 foot = 12 inches

  #Someone whos is 5'10" is 70 inches tall. Why 5 * 12 = 60 inches and if I add 10 inches I get 70
  #good, so up to this point, I have all the heights of the swimmers at JUST Brooklyn College
#the problem here is that the print() is looping the heights to double the amount in the list
# using pop()
# to truncate list 
# size desired
A = 13
B = len(lst0)
for i in range(0, B - A ):
    lst0.pop()

heights_in_inches1 = []

for i in range(0, len(lst0)): #i don't think "height" should be here
  #splitting the raw string on the '
  x = lst0[i].split("'")
  #extracting the feet from the splitted list and converting to int

  feet = int(x[0])
  #converting the feet to inches by mulitplying it by 12

  feet_as_inches = feet * 12
  ##extracting the inches from the splitted list and converting to int

  inches = int(x[1])
  #calculating the total height inches

  total_height_in_inches =  feet_as_inches + inches

  #appending the converted height to a new list
  heights_in_inches1.append(total_height_in_inches)

  #printing the heights in inches (no need to print it really)
  heights_in_inches1

mylist1=[]
for y in bkmensswimteamlist6:
  height = y.get_text()
  mylist1.append(height)
  #print(mylist)
  #height = s.strip('"\"') for s in mylist  # remove the \ from the string 
  #mylst = map(lambda each:each.strip("'\'"), mylist)
  lst1 = mylist1

C = 13
D = len(lst1)
for i in range(0, D - C ):
    lst1.pop()

mylist2=[]
for y in bkmensswimteamlist7:
  height = y.get_text()
  mylist2.append(height)
  #print(mylist)
  #height = s.strip('"\"') for s in mylist  # remove the \ from the string 
  #mylst = map(lambda each:each.strip("'\'"), mylist)
  lst2 = mylist2

E = 13
F = len(lst2)
for i in range(0, F - E ):
    lst2.pop()
#up to this point we have the heights, first name, and last name of the players
'''
lst0 = range(100)
lst1 = range(100)
lst2 = range(100)

percentile_list = pd.DataFrame(
    {'First Name': lst1,
     'Last Name': lst2,
     'Height': lst0
    })

percentile_list
'''


'''
lst0[i] = null;
#true
bool elementIsNull = lst0[i] == null;
lst0.RemoveRange(11,11);
print(lst0)
'''
percentile_list1 = pd.DataFrame(
    {'First Name': lst1,
     'Last Name': lst2,
     'Height (in inches)': heights_in_inches1
    }, index = [1,2,3,4,5,6,7,8,9,10,11,12,13]
)

percentile_list1
#LET'S GOOOOOOO, I CREATED A DATAFRAME WITH THE NAMES AND HEIGHTS OF THE PLAYERS IN THE BK MEN'S SWIMMING AND DIVING ROSTER
#LET'S GOOOOO, I CREATED A DATAFRMAE WITH THE FIRST NAME, LAST NAME, AND NOW THE HEIGHT IN INCHES OF THE BK MEN'S SWIM AND DIVE TEAM

import requests
from bs4 import BeautifulSoup
import pandas as pd

URL5 = 'https://athletics.baruch.cuny.edu/sports/womens-volleyball/roster' #good
URL6 = 'https://athletics.baruch.cuny.edu/sports/womens-volleyball/roster' #good
URL7 = 'https://athletics.baruch.cuny.edu/sports/womens-volleyball/roster' #good

page5 = requests.get(URL5, verify=False)
page6 = requests.get(URL6, verify=False)
page7 = requests.get(URL7, verify=False)

soup5 = BeautifulSoup(page5.content, 'html.parser')
soup6 = BeautifulSoup(page6.content, 'html.parser')
soup7 = BeautifulSoup(page7.content,"html.parser")

bkmensswimteamlist5 = soup5.find_all('span', class_="sidearm-roster-player-height")
bkmensswimteamlist6 = soup6.find_all('span', class_="sidearm-roster-player-first-name")
bkmensswimteamlist7 = soup7.find_all('span', class_="sidearm-roster-player-last-name")

mylist=[]
for x in bkmensswimteamlist5:
  height = x.get_text()
  mylist.append(height)
  #print(mylist)
  #height = s.strip('"\"') for s in mylist  # remove the \ from the string 
  #mylst = map(lambda each:each.strip("'\'"), mylist)
  lst = mylist

  #print([s.strip('"') for s in lst]) # remove the \ and " from the string borders
  #LET'S GOOOOOOOO, HERE I GOT THE HEIGHTS OF EACH OF THE TEAMS USING A FUNCTION!!!!!!!!!!!
  new_list = [s.replace("\"", "") for s in lst]
  #LET'S GOOOOOOO AGAIN, I GOT THE HEIGHTS WITHOUT THAT \ TO COME WITH IT TOOO
  #Create a new list from the one below by converting each height to inches

  lst0 = new_list
  #The new list will look like the following: [70, 71, 69, 75...]

  #1 foot = 12 inches

  #Someone whos is 5'10" is 70 inches tall. Why 5 * 12 = 60 inches and if I add 10 inches I get 70
  #good, so up to this point, I have all the heights of the swimmers at JUST Brooklyn College
#the problem here is that the print() is looping the heights to double the amount in the list
# using pop()
# to truncate list 
# size desired
A = 12
B = len(lst0)
for i in range(0, B - A ):
    lst0.pop()

heights_in_inches1 = []

for i in range(0, len(lst0)): #i don't think "height" should be here
  #splitting the raw string on the '
  x = lst0[i].split("'")
  #extracting the feet from the splitted list and converting to int

  feet = int(x[0])
  #converting the feet to inches by mulitplying it by 12

  feet_as_inches = feet * 12
  ##extracting the inches from the splitted list and converting to int

  inches = int(x[1])
  #calculating the total height inches

  total_height_in_inches =  feet_as_inches + inches

  #appending the converted height to a new list
  heights_in_inches1.append(total_height_in_inches)

  #printing the heights in inches (no need to print it really)
  heights_in_inches1

mylist1=[]
for y in bkmensswimteamlist6:
  height = y.get_text()
  mylist1.append(height)
  #print(mylist)
  #height = s.strip('"\"') for s in mylist  # remove the \ from the string 
  #mylst = map(lambda each:each.strip("'\'"), mylist)
  lst1 = mylist1

C = 12
D = len(lst1)
for i in range(0, D - C ):
    lst1.pop()

mylist2=[]
for y in bkmensswimteamlist7:
  height = y.get_text()
  mylist2.append(height)
  #print(mylist)
  #height = s.strip('"\"') for s in mylist  # remove the \ from the string 
  #mylst = map(lambda each:each.strip("'\'"), mylist)
  lst2 = mylist2

E = 12
F = len(lst2)
for i in range(0, F - E ):
    lst2.pop()
#up to this point we have the heights, first name, and last name of the players
'''
lst0 = range(100)
lst1 = range(100)
lst2 = range(100)

percentile_list = pd.DataFrame(
    {'First Name': lst1,
     'Last Name': lst2,
     'Height': lst0
    })

percentile_list
'''


'''
lst0[i] = null;
#true
bool elementIsNull = lst0[i] == null;
lst0.RemoveRange(11,11);
print(lst0)
'''
percentile_list2 = pd.DataFrame(
    {'First Name': lst1,
     'Last Name': lst2,
     'Height (in inches)': heights_in_inches1
    }, index = [14,15,16,17,18,19,20,21,21,22,23,24] 
)

percentile_list2
#LET'S GOOOOOOO, I CREATED A DATAFRAME WITH THE NAMES AND HEIGHTS OF THE PLAYERS IN THE BK MEN'S SWIMMING AND DIVING ROSTER
#LET'S GOOOOO, I CREATED A DATAFRMAE WITH THE FIRST NAME, LAST NAME, AND NOW THE HEIGHT IN INCHES OF THE BK MEN'S SWIM AND DIVE TEAM


URL5 = 'https://johnjayathletics.com/sports/womens-volleyball/roster' #good
URL6 = 'https://johnjayathletics.com/sports/womens-volleyball/roster' #good
URL7 = 'https://johnjayathletics.com/sports/womens-volleyball/roster' #good

page5 = requests.get(URL5, verify=False)
page6 = requests.get(URL6, verify=False)
page7 = requests.get(URL7, verify=False)

soup5 = BeautifulSoup(page5.content, 'html.parser')
soup6 = BeautifulSoup(page6.content, 'html.parser')
soup7 = BeautifulSoup(page7.content,"html.parser")

bkmensswimteamlist5 = soup5.find_all('span', class_="sidearm-roster-player-height")
bkmensswimteamlist6 = soup6.find_all('span', class_="sidearm-roster-player-first-name")
bkmensswimteamlist7 = soup7.find_all('span', class_="sidearm-roster-player-last-name")

mylist=[]
for x in bkmensswimteamlist5:
  height = x.get_text()
  mylist.append(height)
  #print(mylist)
  #height = s.strip('"\"') for s in mylist  # remove the \ from the string 
  #mylst = map(lambda each:each.strip("'\'"), mylist)
  lst = mylist

  #print([s.strip('"') for s in lst]) # remove the \ and " from the string borders
  #LET'S GOOOOOOOO, HERE I GOT THE HEIGHTS OF EACH OF THE TEAMS USING A FUNCTION!!!!!!!!!!!
  new_list = [s.replace("\"", "") for s in lst]
  #LET'S GOOOOOOO AGAIN, I GOT THE HEIGHTS WITHOUT THAT \ TO COME WITH IT TOOO
  #Create a new list from the one below by converting each height to inches

  lst0 = new_list
  #The new list will look like the following: [70, 71, 69, 75...]

  #1 foot = 12 inches

  #Someone whos is 5'10" is 70 inches tall. Why 5 * 12 = 60 inches and if I add 10 inches I get 70
  #good, so up to this point, I have all the heights of the swimmers at JUST Brooklyn College
#the problem here is that the print() is looping the heights to double the amount in the list

# using pop()
# to truncate list 
# size desired
A = 14
B = len(lst0)
for i in range(0, B - A ):
    lst0.pop()

heights_in_inches1 = []

for i in range(0, len(lst0)): #i don't think "height" should be here
  #splitting the raw string on the '
  x = lst0[i].split("'")
  #extracting the feet from the splitted list and converting to int

  feet = int(x[0])
  #converting the feet to inches by mulitplying it by 12

  feet_as_inches = feet * 12
  ##extracting the inches from the splitted list and converting to int

  inches = int(x[1])
  #calculating the total height inches

  total_height_in_inches =  feet_as_inches + inches

  #appending the converted height to a new list
  heights_in_inches1.append(total_height_in_inches)

  #printing the heights in inches (no need to print it really)
  heights_in_inches1

mylist1=[]
for y in bkmensswimteamlist6:
  height = y.get_text()
  mylist1.append(height)
  #print(mylist)
  #height = s.strip('"\"') for s in mylist  # remove the \ from the string 
  #mylst = map(lambda each:each.strip("'\'"), mylist)
  lst1 = mylist1

C = 14
D = len(lst1)
for i in range(0, D - C ):
    lst1.pop()

mylist2=[]
for y in bkmensswimteamlist7:
  height = y.get_text()
  mylist2.append(height)
  #print(mylist)
  #height = s.strip('"\"') for s in mylist  # remove the \ from the string 
  #mylst = map(lambda each:each.strip("'\'"), mylist)
  lst2 = mylist2

E = 14
F = len(lst2)
for i in range(0, F - E ):
    lst2.pop()
#up to this point we have the heights, first name, and last name of the players
'''
lst0 = range(100)
lst1 = range(100)
lst2 = range(100)

percentile_list = pd.DataFrame(
    {'First Name': lst1,
     'Last Name': lst2,
     'Height': lst0
    })

percentile_list
'''


'''
lst0[i] = null;
#true
bool elementIsNull = lst0[i] == null;
lst0.RemoveRange(11,11);
print(lst0)
'''
percentile_list3 = pd.DataFrame(
    {'First Name': lst1,
     'Last Name': lst2,
     'Height (in inches)': heights_in_inches1
    },
    index = [25,26,27,28,29,30,31,32,33,34,35,36,37,38]
            
)

percentile_list3
#print(percentile_list3)

frames = [percentile_list1, percentile_list2, percentile_list3]
result10001 = pd.concat(frames)
print(result10001)
print("")
averagedf = result10001['Height (in inches)'].mean()
#that was the problem, the people with no height are not showing 0 in the dataframe then in the end, the heights get repeated
print("Average height of all college's women's swimmers: ", round(averagedf), " inches")
print("")

#GOOD to go, no external problems here or player's with missing heights
tall111 = result10001.nlargest(5, ['Height (in inches)'])
list111 = pd.DataFrame(tall111)
listings111 = list111.values.tolist()
print('List of five tallest women volleyball players : ', listings111)
print('Type of list111: ', type(listings111))
print("")
tall222 = result10001.nsmallest(5, ['Height (in inches)'])
list222 = pd.DataFrame(tall222)
listings222 = list222.values.tolist()
print('List of five shortest women volleyball players : ', listings222)
print('Type of list111: ', type(listings222))

'''
def average(heightlist100):
  mylist = []
  for x in heightlist100:
    height  = x.get_text()
    mylist.append(height)
''' 

#So, up to this last print we are are good because the 37 swimmers across the colleges are put into one dataframe :)
#Big thing to note: Always save work and text myself about what my ideas or thoughts were leading towards iA
#LET'S GOOOOOOO, I CREATED A DATAFRAME WITH THE NAMES AND HEIGHTS OF THE PLAYERS IN THE BK MEN'S SWIMMING AND DIVING ROSTER
#LET'S GOOOOO, I CREATED A DATAFRMAE WITH THE FIRST NAME, LAST NAME, AND NOW THE HEIGHT IN INCHES OF THE BK MEN'S SWIM AND DIVE TEAM
#LET'S GOOOOO, I GOT THREE OF THE SIMILAR DATAFRAME FOR THE MEN'S SWIM TEAM FOR THREE DIFFERENT COLLEGES
#LET'S GOOOO, GOT ALL THE 37 PLAYERS ACROSS THE COLLEGES THAT WE WERE LOOKING FOR, NOW MERGE INTO A DATAFRAME
#LET'S GOOOO, GOT ALL TEH PLAYERS FOR THE MENS SWIM TEAM ACROSS COLLEGES INTO ONE DATAFRAME BY INSWZ

#Basically, we know this whole thing works for one sport gender and roster of teams, the thing we have to do now is try to kind of "loop" and reduce
#code so that my code would look cleaner and the process would be easier for all the other questions that relatively the same then I can just write the report